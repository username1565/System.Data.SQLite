<!--
 *
 * Eagle.tasks -
 *
 * WARNING: Contains more evil MSBuild hacks than your doctor recommended.
 *
 * Copyright (c) 2007-2012 by Joe Mistachkin.  All rights reserved.
 *
 * See the file "license.terms" for information on usage and redistribution of
 * this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @(#) $Id: $
 *
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  ******************************************************************************
  **                          Load Per-User Settings                          **
  ******************************************************************************
  -->

  <!--
      NOTE: If the per-user settings file exists, import it now.  The contained
            settings, if any, will override the default ones provided below.
  -->
  <Import Condition="'$(EagleDir)' != '' And
                     !HasTrailingSlash('$(EagleDir)') And
                     Exists('$(EagleDir)\Targets\Eagle.tasks.user')"
          Project="$(EagleDir)\Targets\Eagle.tasks.user" />

  <!--
  ******************************************************************************
  **                            Eagle Build Tasks                             **
  ******************************************************************************
  -->

  <!--
      NOTE: Evaluates the expression specified by the "Text" input parameter
            and outputs the "Code" and "Result" output parameters.
  -->
  <UsingTask TaskName="EvaluateExpression"
             Condition="'$(EagleTaskPath)' != '' And
                        HasTrailingSlash('$(EagleTaskPath)') And
                        Exists('$(EagleTaskPath)EagleTasks.dll')"
             AssemblyFile="$(EagleTaskPath)EagleTasks.dll" />

  <!--
  ******************************************************************************
  -->

  <!--
      NOTE: Evaluates the file specified by the "Text" input parameter and
            outputs the "Code" and "Result" output parameters.
  -->
  <UsingTask TaskName="EvaluateFile"
             Condition="'$(EagleTaskPath)' != '' And
                        HasTrailingSlash('$(EagleTaskPath)') And
                        Exists('$(EagleTaskPath)EagleTasks.dll')"
             AssemblyFile="$(EagleTaskPath)EagleTasks.dll" />

  <!--
  ******************************************************************************
  -->
  <!--
      NOTE: Evaluates the script specified by the "Text" input parameter and
            outputs the "Code" and "Result" output parameters.
  -->
  <UsingTask TaskName="EvaluateScript"
             Condition="'$(EagleTaskPath)' != '' And
                        HasTrailingSlash('$(EagleTaskPath)') And
                        Exists('$(EagleTaskPath)EagleTasks.dll')"
             AssemblyFile="$(EagleTaskPath)EagleTasks.dll" />

  <!--
  ******************************************************************************
  -->

  <!--
      NOTE: Performs command, variable, and backslash substitutions on the file
            specified by the "Text" input parameter and outputs the "Code" and
            "Result" output parameters.
  -->
  <UsingTask TaskName="SubstituteFile"
             Condition="'$(EagleTaskPath)' != '' And
                        HasTrailingSlash('$(EagleTaskPath)') And
                        Exists('$(EagleTaskPath)EagleTasks.dll')"
             AssemblyFile="$(EagleTaskPath)EagleTasks.dll" />

  <!--
  ******************************************************************************
  -->

  <!--
      NOTE: Performs command, variable, and backslash substitutions on the
            string specified by the "Text" input parameter and outputs the
            "Code" and "Result" output parameters.
  -->
  <UsingTask TaskName="SubstituteString"
             Condition="'$(EagleTaskPath)' != '' And
                        HasTrailingSlash('$(EagleTaskPath)') And
                        Exists('$(EagleTaskPath)EagleTasks.dll')"
             AssemblyFile="$(EagleTaskPath)EagleTasks.dll" />
</Project>
